8.2 消息认证码
  在上一章节 单向散列函数中 我们只解决了篡改问题
  但是除了篡改，还有可能存在伪装问题
  ：“消息是其他人伪装成真正的发送者而发出的”

  8.2.2 什么是消息认证码
    消息认证码 Message Authentication Code = MAC
    MAC与单项散列函数的区别在于加上了一个共享的密钥
    也正是由于这个密钥的存在
    才使得能够在 单向散列函数 的基础上 完成了 认证功能
    
    暂时可以这样理解：
    消息认证码是一种与密钥相关联的单项散列函数。
    
    PS 这个密钥是发送者和接收者事先共享的 —— 至于如何保证密钥的分享 ——> 公钥密码、Diffie-Hellman之类都行
    具体过程暂时不表了，不太好记
    
    反正就是在单向散列函数的基础上，加了一个密钥，然后密钥对信息加密求得MAC值，然后把MAC值和密文都发过去
    那边解密密文，然后通过密钥对密文也加密得到MAC，看看和发来的MAC是否一致即可。
    
    由于 拦截重发 者不知道加密密钥，所以篡改后的信息到接收者那边，一算，MAC值对不上，
    
 8.8 消息认证码无法解决的问题 —— 这是由于发送者和接收者共享相同的密钥
    8.8.1 对第三方证明
    没法向第三方证明
    
    8.8.2 无法防止否认
    
